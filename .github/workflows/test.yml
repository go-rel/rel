name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Unit Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        go: [1.12, 1.13, 1.14, 1.15, 1.16]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^${{ matrix.go }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - run: go test -race ./...

  cli:
    name: CLI
    env:
      SQLITE3_DATABASE: cli-test.db
    strategy:
      matrix:
        os: [ubuntu-latest]
        go: [1.12, 1.13, 1.14, 1.15, 1.16]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^${{ matrix.go }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - run: go install ./cmd/rel
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          repository: Fs02/go-todo-backend
          path: project
      - name: Test CLI
        working-directory: project
        run: |
          rel -v
          rel migrate
          rel rollback

  coverage:
    name: Coverage
    env:
      TZ: Asia/Jakarta
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: go test -race -tags=all -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Codecov
        uses: codecov/codecov-action@v1

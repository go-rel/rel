name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: [1.12, 1.13, 1.14, 1.15]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^${{ matrix.go }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - run: go test -race ./...

  mysql:
    name: MySQL
    strategy:
      matrix:
        mysql: [5, 8]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: ${{ matrix.mysql }}
          mysql database: rel_test
          mysql user: rel
          mysql password: rel
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - env:
          MYSQL_DATABASE: rel:rel@(127.0.0.1:3306)/rel_test
        run: go test -race -tags=mysql ./...

  postgres:
    name: Postgres
    strategy:
      matrix:
        postgres: [9, 10, 11, 12, 13]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
      - name: Setup PostgreSQL
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: ${{ matrix.postgres }}
          postgresql db: rel_test
          postgresql user: rel
          postgresql password: rel
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - env:
          POSTGRESQL_DATABASE: postgres://rel:rel@localhost/rel_test
        run: go test -race -tags=postgres ./...

  cli:
    name: CLI
    env:
      SQLITE3_DATABASE: cli-test.db
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: [1.12, 1.13, 1.14, 1.15]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^${{ matrix.go }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - run: go install ./cmd/rel
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          repository: Fs02/go-todo-backend
          path: project
      - name: Test CLI
        working-directory: project
        run: |
          rel -v
          rel migrate
          rel rollback

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: rel_test
          mysql user: rel
          mysql password: rel
      - name: Setup PostgreSQL
        uses: harmon758/postgresql-action@v1
        with:
          postgresql db: rel_test
          postgresql user: rel
          postgresql password: rel
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - env:
          MYSQL_DATABASE: rel:rel@(127.0.0.1:3306)/rel_test
          POSTGRESQL_DATABASE: postgres://rel:rel@localhost/rel_test
        run: go test -race -tags=all -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Codecov
        uses: codecov/codecov-action@v1.0.13
